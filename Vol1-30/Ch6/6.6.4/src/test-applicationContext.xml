<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:tcp://localhost/~/sa" />
		<property name="username" value="sa" />
		<property name="password" value="sa" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />  
	</bean>
	
	<!-- aop --> 
	<aop:config> <!-- AOP 설정 -->
		<!-- 이름이 Service로 끝나는 모든빈에 transactionAdive 빈의 부가기능이 적용된다  -->
		<aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)" />
	</aop:config>
	
	<!-- TransactionIntercepto 빈이 등록된다 -->
	<tx:advice id="transactionAdvice">
		<tx:attributes>
			<!-- get으로 시작하는 메소드에 읽기전용 속성부여. 해당 메소드가 트랜잭션의 실제 위치가 아니라면 읽기 속성은 무시된다 -->
			<tx:method name="get*" read-only="true"/>
			<!-- 모든 타켓 메소드에 기본 트랜잭션 속성 지정. 순서 주의-->
			<tx:method name="*" />
		</tx:attributes> 
	</tx:advice>
		
	<!-- 
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	
	<bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
		<property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))" />
	</bean>
	
	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactionAdvice" />
		<property name="pointcut" ref="transactionPointcut" />
	</bean> 
	 -->
	
	<!--  application components -->
	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	
	<bean id="userService" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	
	<bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserService" parent="userService" />
	
	<!-- 
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="mail.server.com" />
	</bean>
	 -->
	<bean id="mailSender" class="springbook.user.service.DummyMailSender" />
</beans>
